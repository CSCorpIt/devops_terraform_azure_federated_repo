name: 'Aks'

on: 
 workflow_dispatch:
  inputs:
    solutionName:
        description: 'Solution Name'
        required: true
        type: string
    destroy:
        description: "Set to true to destroy the infrastructure"
        required: false
        default: "false"

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: dev
    
    defaults:
      run:
        shell: bash

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
                 
    - name: Terraform Init
      run: terraform -chdir=aks  init -backend-config="key=${{inputs.solutionName}}_state"
      env:
        TF_VAR_clientID: ${{ secrets.AZURE_CLIENT_ID }}
        TF_VAR_tenantID: ${{ secrets.AZURE_TENANT_ID }}
        TF_VAR_subID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        TF_VAR_solutionName: ${{ inputs.solutionName }}
        
    - name: Terraform Format
      run: terraform -chdir=aks fmt -check

    - name: Terraform Conditional Plan/Destroy
      run: |
        if [ "${{ github.event.inputs.destroy }}" == "true" ]; then
          echo "Running Terraform Destroy"
          terraform -chdir=aks plan -destroy -input=false
        else
          echo "Running Terraform Plan"
          terraform -chdir=aks plan -input=false
        fi  
      env:
        TF_VAR_clientID: ${{ secrets.AZURE_CLIENT_ID }}
        TF_VAR_tenantID: ${{ secrets.AZURE_TENANT_ID }}
        TF_VAR_subID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        TF_VAR_solutionName: ${{ inputs.solutionName }}

    - name: Terraform Conditional Apply/Destroy
      run: |
       if [ "${{ github.event.inputs.destroy }}" == "true" ]; then
          echo "Running Terraform Destroy"
          terraform -chdir=aks apply -destroy -auto-approve -input=false
       else
          echo "Running Terraform Plan"
          terraform -chdir=aks apply -auto-approve -input=false
       fi  
      env:
          TF_VAR_clientID: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_tenantID: ${{ secrets.AZURE_TENANT_ID }}
          TF_VAR_subID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_solutionName: ${{ inputs.solutionName }} 
